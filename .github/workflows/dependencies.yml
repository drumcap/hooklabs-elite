name: 📦 의존성 관리

on:
  schedule:
    # 매주 월요일 오전 9시 (KST)에 실행
    - cron: '0 0 * * 1'
  workflow_dispatch:

env:
  NODE_VERSION: '20'

jobs:
  # =======================
  # 🔍 보안 취약점 검사
  # =======================
  security-audit:
    name: 🔍 보안 취약점 검사
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 코드 체크아웃
        uses: actions/checkout@v4
        
      - name: 🚀 Node.js 설정
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📦 의존성 설치
        run: npm ci
        
      - name: 🔒 npm audit 실행
        run: npm audit --audit-level high
        continue-on-error: true
        
      - name: 🛠️ 자동 수정 가능한 취약점 수정
        run: npm audit fix
        
      - name: 📝 보안 리포트 생성
        run: |
          npm audit --json > security-audit.json
          echo "## 보안 검사 결과" > security-report.md
          echo "$(date)" >> security-report.md
          echo "" >> security-report.md
          
      - name: 📊 Snyk 보안 스캔
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high
          
      - name: 📱 슬랙 알림 (취약점 발견시)
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          channel: '#security'
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          text: "🚨 보안 취약점이 발견되었습니다. 즉시 확인이 필요합니다."

  # =======================
  # 📦 의존성 업데이트 체크
  # =======================
  dependency-check:
    name: 📦 의존성 업데이트 체크
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 코드 체크아웃
        uses: actions/checkout@v4
        
      - name: 🚀 Node.js 설정
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📦 의존성 설치
        run: npm ci
        
      - name: 🔍 outdated 패키지 검사
        run: |
          npm outdated --json > outdated.json || true
          cat outdated.json
          
      - name: 📊 의존성 분석
        run: |
          echo "## 업데이트 가능한 패키지" > dependency-report.md
          echo "$(date)" >> dependency-report.md
          echo "" >> dependency-report.md
          npx npm-check-updates --format repo >> dependency-report.md
          
      - name: 🔄 마이너 업데이트 생성
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          
          # 마이너 버전 업데이트만 수행
          npx npm-check-updates --target minor -u
          
          if git diff --quiet package.json; then
            echo "업데이트할 마이너 버전이 없습니다."
          else
            npm install
            git add package.json package-lock.json
            git commit -m "chore: 마이너 의존성 업데이트 (자동)"
            git push origin main
          fi

  # =======================  
  # 🧹 정리 작업
  # =======================
  cleanup:
    name: 🧹 의존성 정리
    runs-on: ubuntu-latest
    needs: [security-audit, dependency-check]
    
    steps:
      - name: 📥 코드 체크아웃
        uses: actions/checkout@v4
        
      - name: 🚀 Node.js 설정
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📦 의존성 설치
        run: npm ci
        
      - name: 🧹 미사용 의존성 검사
        run: |
          npm install -g depcheck
          depcheck --json > unused-dependencies.json
          
      - name: 📊 번들 크기 분석
        run: |
          npm run build
          npm run build:analyze
          
      - name: 📈 의존성 트리 분석
        run: |
          npm ls --depth=0 > dependency-tree.txt
          du -sh node_modules > bundle-size.txt
          
      - name: 📝 정리 리포트 생성
        run: |
          echo "## 의존성 정리 리포트" > cleanup-report.md
          echo "$(date)" >> cleanup-report.md
          echo "" >> cleanup-report.md
          echo "### 번들 크기" >> cleanup-report.md
          cat bundle-size.txt >> cleanup-report.md
          echo "" >> cleanup-report.md
          echo "### 의존성 트리" >> cleanup-report.md
          head -20 dependency-tree.txt >> cleanup-report.md